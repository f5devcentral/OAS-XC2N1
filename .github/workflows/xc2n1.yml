name: OAS XC2N1

on:
  push:
    branches: [ "oas-deploy" ]
  pull_request:
    branches: [ "oas-deploy" ]
  workflow_dispatch:

env:
  OAS: ${{ vars.OAS }}-${{ vars.OASVER }}.json

jobs:
  XC_Pull:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
            
      - name: Set variables 
        run: |
          export OAS="${{ vars.OAS }}-${{ vars.OASVER }}"

      - name: Install tools
        run: |
          sudo snap install yq

      - name: Get the OAS
        run: |
          curl -X GET --location 'https://${{ secrets.XC_TENANT }}/api/object_store/namespaces/${{vars.NAMESPACE}}/stored_objects/swagger/${{vars.OAS}}/${{vars.OASVER}}' -H 'Authorization: Bearer APIToken ${{ secrets.XC_APITOKEN }}' -o ./oas/oas.json
        working-directory: ${{ github.workspace }}

      - name: Process and Push the OAS
        run: |
          yq -Poy ./oas/oas.json > ./oas/${{ env.OAS }} && sed -i '/metadata:/,/string_value: |/d' ./oas/${{ env.OAS }} && sed -i '/content_format: json/d' ./oas/${{ env.OAS }}
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add ./oas/${{ env.OAS }}
          git commit -m 'Committing updated OAS ${{ env.OAS }}'
          git push

  N1_Push:
    runs-on: ubuntu-latest
    needs: XC_Pull
    steps:

      - uses: actions/checkout@v4

      - name: Set variables 
        run: |
          export OAS="${{ vars.OAS }}-${{ vars.OASVER }}.json"
          echo "XC2N1_TIMESTAMP=`date -u +"%Y-%m-%dT%H:%M:%SZ"`" >> $GITHUB_ENV
          echo "XC2N1_COMMIT_HASH=$(git show --pretty=format:"%H %s" -s HEAD)" >> $GITHUB_ENV
          echo "XC2N1_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV


      - name: Install tools
        run: |
          pip install shyaml

      - name: Process OAS
        run: |
          git pull
          ./scripts/oas2nginx.sh ./oas/${{ env.OAS }} > ./conf/etc/nginx/api_conf.d/crapi_api.conf
          sed -i '/^oas2nginx.sh:/d' ./conf/etc/nginx/api_conf.d/crapi_api.conf
          echo "NGINX_APIG_CONFIG_FILE=`cat conf/etc/nginx/api_conf.d/crapi_api.conf | base64 -w 0`" >> $GITHUB_ENV
          echo "NGINX_APIG_CONFIG_FILE_SIZE=`wc -c < conf/etc/nginx/api_conf.d/crapi_api.conf`" >> $GITHUB_ENV

      - name: PATCH the instance config
        run: |
          curl -X PATCH --location 'https://${{ secrets.XC_TENANT }}/api/nginx/one/namespaces/default/instances/${{ vars.APIG_INSTANCE }}/config' -H 'Authorization: Bearer APIToken ${{ secrets.XC_APITOKEN }}' --data '{ "aux": [], "conf_path": "/etc/nginx/api_conf.d/crapi_api.conf", "configs": [ { "files": [ { "contents": "${{ env.NGINX_APIG_CONFIG_FILE }}", "mtime": "1970-01-01T00:00:00Z", "name": "crapi_api.conf", "size": ${{ env.NGINX_APIG_CONFIG_FILE_SIZE }} } ], "name": "/etc/nginx/api_conf.d" } ] }' -H "Content-Type: application/json" -o response.json
          cat response.json
          echo "PUBLICATION_ID=`cat response.json | jq -c '.object_id'`" >> $GITHUB_ENV
      
      - name: Check publication status1
        run: |
          curl -X GET https://${{ secrets.XC_TENANT }}/api/nginx/one/namespaces/default/instances/${{ vars.APIG_INSTANCE }}/publications/${{ env.PUBLICATION_ID }}  -H 'Authorization: Bearer APIToken ${{ secrets.XC_APITOKEN }}' -o response.json
          cat response.json | jq -c .status

      - name: Sleep for 15 seconds
        run: sleep 15s
        shell: bash
      
      - name: Check publication status2
        run: |
          curl -X GET https://${{ secrets.XC_TENANT }}/api/nginx/one/namespaces/default/instances/${{ vars.APIG_INSTANCE }}/publications/${{ env.PUBLICATION_ID }}  -H 'Authorization: Bearer APIToken ${{ secrets.XC_APITOKEN }}' -o response.json
          cat response.json | jq -c .status

      - name: Push the updated APIG conf
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add ./conf/etc/nginx/api_conf.d/crapi_api.conf
          git mv ./conf/etc/nginx/api_conf.d/crapi_api.conf ./conf/etc/nginx/api_conf.d/crapi_api.conf.${{ env.OAS }}
          git commit -m 'Committing updated test conf for ${{ env.OAS }}'
          git push